import static java.lang.Math.sqrt;

public class Point {
    private int x;
    private int y;
    public Point(int x, int y){
        this.x=x;
        this.y=y;
    }

    public String toString(){
       return "x="+this.x+", "+"y="+this.y;
    }
    public double distanceFromPoint(Point t){
        return sqrt((this.x- t.x)*(this.x- t.x)+(this.y- t.y)*(this.y- t.y));

    }
    public int getX(){
        return x;
    }

    public void setX(int x) {
        this.x = x;
    }

    public int getY() {
        return y;
    }

    public void setY(int y) {
        this.y = y;
    }
}

public class Line {
    private Point baslangic;
    private Point bitis;
    public Line(Point baslangic, Point bitis){
        this.baslangic=baslangic;
        this.bitis=bitis;
    }

    public String toString(){
        String s="(x= "+baslangic.getX()+","+"y= "+baslangic.getY()+"),"+"(x= "+bitis.getX()+","+"y= "+bitis.getY()+")";
        return s;
    }
    public double length(Line w){
        //return Math.sqrt((baslangic.getX()- bitis.getX())*(baslangic.getX()- bitis.getX())+(baslangic.getY()- bitis.getY())*(baslangic.getY()- bitis.getY())(double));
        return w.baslangic.distanceFromPoint(w.bitis);
    }

    public Point getBaslangic() {
        return baslangic;
    }

    public void setBaslangic(Point baslangic) {
        this.baslangic = baslangic;
    }

    public Point getBitis() {
        return bitis;
    }

    public void setBitis(Point bitis) {
        this.bitis = bitis;
    }
}

import java.util.ArrayList;
import java.util.Collections;


public class PolyLine {
    private ArrayList<Point> k;
    public PolyLine(){
        this.k=new ArrayList<Point>();
    }
    public PolyLine(Line l){
        this.k=new ArrayList<Point>();
        this.addLine(l);

    }

    public void addPoint(Point p){
        k.add(p);

    }
    public void addLine(Line q){
        k.add(q.getBaslangic());
        k.add(q.getBitis());
    }
    public void addPolyLine(PolyLine r){
        k.addAll(r.getK());
    }
    public String toString(){
        StringBuilder s=new StringBuilder("[");
        for (int i = 0; i < k.size(); i++) {
            s.append(k.get(i).toString());
            if (i != k.size() - 1) {
               s.append(",");
            }
        }
        s.append("]");
        return s.toString();
    }


    public double length(){
        double topzunluk = 0.0;
        for (int i = 0; i < k.size() - 1; i += 2) {
            Point ilk = k.get(i);
            Point sonraki = k.get(i + 1);
            topzunluk += ilk.distanceFromPoint(sonraki);
        }
        return topzunluk;

    }

    public PolyLine reverse() {
        ArrayList<Point> reversedK = new ArrayList<>();
        Collections.reverse(reversedK);
        PolyLine reversedPolyLine;
        reversedPolyLine = new PolyLine();
        reversedPolyLine.setK(reversedK);
        return reversedPolyLine;
    }


    public ArrayList<Point> getK() {
        return k;
    }
    public void setK(ArrayList<Point> k) {
        this.k = k;
    }

}
